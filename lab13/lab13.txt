What benefit did using the React Router bring to the application?
	- Routes are in line with the calls and the Browser History allows us to store the form data in our URL.

Which is better, hash history or browser history?
	- Browser history does not store state information in the URL so it is more secure than hash history.

Why does the server (either Webpack Dev Server or the Express server) have to be modified to support the 
browser history? Compare this with the hash-based server demonstrated in class, which didn't require such 
modifications.
	- The default is to hash the form data from the URL so when we store the data in the URL using browser history we have to prevent the default reaction.

What state does the new CommentEdit component maintain and how does that compare with the state maintained by the CommentBox component?
	- CommentEdit maintains the data specific to an ID while CommentBox maintains the data concerning the list and form.

What does the CommentEdit component do when the AJAX PUT or DELETE methods return successfully? How does this compare with what the “Cancel” button provided by the CommentEdit component does?
	- this.context.router.push('/'); returns to the default route the same is true with <Link to='/'>Cancel</Link>

How is the Link added in the last step different from a simple HTML hyperlink?
	- Link is aware of the router it is rendered and acts as a property of the application that is only accessable on the server.
